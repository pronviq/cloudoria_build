{"version":3,"file":"static/js/603.ee338b9e.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? [Math.random()] : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (jsx(Fragment, { children: childrenToRender.map((child) => (jsx(PresenceChild, { isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)))) }));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (jsx(PresenceChild, { isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (jsx(PresenceChild, { isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (jsx(Fragment, { children: exitingChildren.size\n            ? childrenToRender\n            : childrenToRender.map((child) => cloneElement(child)) }));\n};\n\nexport { AnimatePresence };\n","import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n                if (i === unresolvedKeyframes.length - 1) {\n                    this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.6\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const props = visualElement.getProps();\n            const appearId = props[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection = new ProjectionNodeConstructor(this.latestValues, renderedProps[\"data-framer-portal-id\"]\n                ? undefined\n                : getClosestProjectingNode(this.parent));\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.6\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","forceRender","LayoutGroupContext","forcedRenderCount","setForcedRenderCount","useState","useCallback","frame","postRender","useForceUpdate","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exitingChildren","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","Fragment","map","undefined","presentKeys","targetKeys","numPresent","length","i","indexOf","has","component","get","insertionIndex","exitingComponent","onExit","leftOverKeys","Array","from","keys","filter","childKey","includes","leftOverKey","presentChild","presentChildKey","splice","cloneElement","createContext","transformPagePoint","p","isStatic","reducedMotion","Queue","constructor","order","scheduled","Set","add","process","remove","index","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","arguments","queue","cancel","frameData","createRenderStep","processStep","stepId","processBatch","MotionGlobalConfig","useManualTiming","performance","now","max","min","keepAlive","immediate","cancelFrame","requestAnimationFrame","noop","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","microtask","cancelMicrotask","queueMicrotask","isRefObject","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","instance","mount","unmount","isVariantLabel","v","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","isBrowser","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","wantsHandoff","window","HandoffComplete","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","_ref2","layoutGroupId","createMotionProxy","createConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","clearTime","time","newTime","isZeroValueString","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixImmediate","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","memo","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","HandoffCancelAllAnimations","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}
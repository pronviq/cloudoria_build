{"version":3,"file":"static/js/126.c73f6c01.chunk.js","mappings":"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","sources":["pages/login/Main.tsx","pages/login/Login.tsx"],"sourcesContent":["import { RefObject, useEffect, useRef, useState } from \"react\";\nimport \"./Main.scss\";\nimport InputField from \"./InputField\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppDispatch } from \"../../hooks/redux\";\nimport AuthService from \"../../services/AuthService\";\nimport { AxiosResponse, AxiosError } from \"axios\";\nimport { AuthResponse } from \"../../models/Auth.model\";\nimport { setCurrentDir } from \"../../redux/fileSlice\";\nimport { setUser } from \"../../redux/userSlice\";\nimport UserService from \"../../services/UserService\";\nimport { SpinnerLoader } from \"../../components/Loader\";\n\nconst Main = () => {\n  const [login, setLogin] = useState<string>(\"\");\n  const [pass, setPass] = useState<string>(\"\");\n  const [bothError, setBothError] = useState<string>(\"\");\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [isDone, setIsDone] = useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n\n  const loginRef = useRef<HTMLInputElement>(null);\n  const passRef = useRef<HTMLInputElement>(null);\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  async function Login() {\n    setLoading(true);\n    await AuthService.login(login, pass)\n      .then((response: AxiosResponse<AuthResponse>) => {\n        const user = UserService.responseToUser(response);\n        dispatch(setUser(user));\n        dispatch(setCurrentDir(user.root_directory));\n        localStorage.setItem(\"token\", response.data?.access);\n\n        navigate(\"/\");\n      })\n      .catch((error: AxiosError) => {\n        console.log(error.response);\n\n        const err = (error.response?.data as string) || (error.message as string);\n        if (err === \"Неверное имя или пароль\") {\n          setBothError(err);\n        } else {\n          setError(err);\n        }\n        setLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsDone(true);\n    }, 1200);\n  }, []);\n\n  useEffect(() => {\n    loginRef.current?.focus();\n  }, [isDone]);\n\n  return (\n    <main className=\"loginpage_main\">\n      <div className=\"loginpage_main-container\">\n        <div className=\"loginpage_main-title\">\n          <p>С возвращением!</p>\n          <div />\n        </div>\n        {isDone && (\n          <>\n            <InputField\n              reference={loginRef}\n              value={login}\n              onChange={(val) => {\n                setBothError(\"\");\n                setLogin(val);\n              }}\n              error={bothError ? true : \"\"}\n              type=\"text\"\n              title=\"Введите имя или e-mail\"\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\") {\n                  e.preventDefault();\n                  passRef.current?.focus();\n                }\n              }}\n            />\n            <InputField\n              reference={passRef}\n              value={pass}\n              onChange={(val) => {\n                setBothError(\"\");\n                setPass(val);\n              }}\n              error={bothError}\n              type=\"password\"\n              title=\"Введите пароль\"\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\") {\n                  e.preventDefault();\n                  Login();\n                }\n              }}\n            />\n            <div className=\"loginpage_main-footer\">\n              <div className=\"loginpage_main-loader\">{isLoading && <SpinnerLoader />}</div>\n              <button onClick={Login} className=\"loginpage_main-confirm\">\n                Войти\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n      <div className=\"loginpage_main-error\">{error}</div>\n    </main>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport \"./Login.scss\";\nimport Background from \"./Background\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Main from \"./Main\";\n\nconst LoginPage: React.FC = () => {\n  return (\n    <div className=\"loginpage\">\n      <Background />\n      <div className=\"loginpage_container\">\n        <Header type=\"login\" />\n        <Main />\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Main","login","setLogin","useState","pass","setPass","bothError","setBothError","isLoading","setLoading","isDone","setIsDone","error","setError","loginRef","useRef","passRef","navigate","useNavigate","dispatch","useAppDispatch","async","Login","AuthService","then","response","_response$data","user","UserService","responseToUser","setUser","setCurrentDir","root_directory","localStorage","setItem","data","access","catch","_error$response","console","log","err","message","useEffect","setTimeout","_loginRef$current","current","focus","_jsxs","className","children","_jsx","_Fragment","InputField","reference","value","onChange","val","type","title","onKeyDown","e","_passRef$current","key","preventDefault","SpinnerLoader","onClick","LoginPage","Background","Header","Footer"],"sourceRoot":""}